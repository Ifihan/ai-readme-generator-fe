import{$a as s,H as S,Ja as v,Na as U,Va as d,Za as g,_a as a,ab as l,cb as _,db as I,g as c,i as p,j as i,k as b,n,q as o,t as f,w as m,x as u}from"./chunk-SUWS7CD2.js";var A=class h{constructor(e){this.platformId=e;if(this.isBrowser=v(this.platformId),this.isBrowser){let t=localStorage.getItem(a.ACCESS_TOKEN);t&&(this.tokenSubject.next(t),this.getCurrentUser(t).subscribe({next:r=>{},error:r=>{}}))}}http=u(U);router=u(d);notificationService=u(_);logger=u(I);tokenSubject=new c(null);currentUserSubject=new c(null);GITHUB_CLIENT_ID=g.githubClientId;API_URL=g.apiUrl;isBrowser;login(){return this.http.get(`${this.API_URL}${s.AUTH.LOGIN}`).pipe(o(e=>{this.isBrowser&&e?.oauth_url&&(window.location.href=e.oauth_url)}),n(e=>(this.clearAuth(),i(()=>e))))}handleCallback(e){return this.http.get(`${this.API_URL}${s.AUTH.CALLBACK}`,{params:{code:e}}).pipe(o(t=>{}),n(t=>(this.clearAuth(),i(()=>t))))}getToken(){return this.tokenSubject.asObservable()}isAuthenticated(){return this.isBrowser?this.tokenSubject.pipe(b(e=>{if(!e){let t=localStorage.getItem(a.ACCESS_TOKEN);return t?(this.tokenSubject.next(t),!0):!1}return e.length>0})):p(!1)}clearAuth(){this.tokenSubject.next(null),this.currentUserSubject.next(null),this.isBrowser&&(localStorage.removeItem(a.ACCESS_TOKEN),localStorage.removeItem(a.CURRENT_SESSION)),this.notificationService.info("You have been logged out."),window.location.href=l.LANDING}logout(){this.http.post(`${this.API_URL}${s.AUTH.LOGOUT}`,{}).subscribe({next:()=>{this.clearAuth(),this.router.navigate([l.LANDING])},error:e=>{this.clearAuth(),this.router.navigate([l.LANDING])}})}getCurrentUser(e){return this.isBrowser?this.http.get(`${this.API_URL}${s.AUTH.ME}`).pipe(o(t=>{localStorage.setItem(a.USER_SESSION,JSON.stringify(t));let r={id:t.user_data.id,username:t.user_data.username,email:t.user_data.email||void 0,avatarUrl:t.user_data.avatar_url,githubId:t.user_data.github_id?.toString()};return this.currentUserSubject.next(r),r}),b(t=>({id:t.user_data.id,username:t.user_data.username,email:t.user_data.email||void 0,avatarUrl:t.user_data.avatar_url,githubId:t.user_data.github_id?.toString()})),n(t=>i(()=>t))):p(null)}getUser(){return this.currentUserSubject.asObservable()}updateProfile(e){return this.http.patch(`${this.API_URL}/user/profile`,e).pipe(o(t=>{this.currentUserSubject.next(t)}),n(t=>(console.error("Error updating profile",t),i(()=>t))))}refreshToken(e){let t=e||(this.isBrowser?localStorage.getItem("access_token"):null);return t?this.http.post(`${this.API_URL}/auth/refresh-token`,{},{headers:{Authorization:`Bearer ${t}`}}).pipe(o(r=>{r&&r.access_token&&this.isBrowser&&(localStorage.setItem(a.ACCESS_TOKEN,r.access_token),this.tokenSubject.next(r.access_token))}),n(r=>(this.logger.error("Error refreshing token",r),i(()=>r)))):i(()=>new Error("No token available to refresh."))}verifyToken(e){return e?this.http.post(`${this.API_URL}${s.AUTH.VERIFY}?token=${encodeURIComponent(e)}`,{}).pipe(n(t=>i(()=>t))):i(()=>new Error("No token provided for verification."))}reinstallGitHubApp(){return this.http.post(`${this.API_URL}${s.AUTH.REINSTALL}`,{})}revokeGitHubApp(){return this.http.delete(`${this.API_URL}${s.AUTH.REVOKE}`)}static \u0275fac=function(t){return new(t||h)(m(S))};static \u0275prov=f({token:h,factory:h.\u0275fac,providedIn:"root"})};export{A as a};
